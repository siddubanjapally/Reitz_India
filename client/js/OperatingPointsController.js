// Generated by CoffeeScript 1.6.3
(function() {
  (angular.module('reitz')).controller('OperatingPointsController', function($scope, $route, $location, $routeParams, $rootScope, projectservice, ReitzResources, chartService) {
    $scope.state = $routeParams['state'];
    if (localStorage.username === void 0) {
      $location.path('#/login');
    }
    $scope.data = projectservice.data;
    $scope.opbtn = true;
    $scope.$watch('data.GasOperatingPoint.T', (function(value) {
      return $scope.data.GasOperatingPoint.Vi = projectservice.density(value);
    }), true);
    $scope.chb = {
      At: true,
      Ro: false
    };
    $scope.$watch('data.GasOperatingPoint.Atcheck', (function(value) {
      if (value) {
        $scope.chb.At = false;
        $scope.chb.Ro = true;
        return $scope.data.GasOperatingPoint.Alt = null;
      } else {
        $scope.chb.At = true;
        return $scope.chb.Ro = false;
      }
    }), true);
    $scope.addOperatingPoint = function(dummy) {
      var count;
      if (dummy === void 0) {
        if ($scope.data.GasOperatingPoints.length === 0) {
          if ($scope.data.GasOperatingPoint.T === '' && $scope.data.GasOperatingPoint.Ro === '' && $scope.data.GasOperatingPoint.Vp === '' && $scope.data.GasOperatingPoint.Dpt === '') {
            return console.log('Data Required ');
          } else {
            if ($scope.data.GasOperatingPoint.T !== '0' && $scope.data.GasOperatingPoint.Ro !== '0' && $scope.data.GasOperatingPoint.Vp !== '0' && $scope.data.GasOperatingPoint.Dpt !== '0') {
              $scope.data.GasOperatingPoints.push($scope.data.GasOperatingPoint);
              return $scope.data.GasOperatingPoint = {
                T: '',
                F: 0,
                P1: 0,
                Dpt: '',
                Vp: '',
                Ro: ''
              };
            } else {
              return console.log('Data Required ');
            }
          }
        } else {
          count = 0;
          _.each($scope.data.GasOperatingPoints, function(ob) {
            if (ob.Ro === $scope.data.GasOperatingPoint.Ro && ob.Vp === $scope.data.GasOperatingPoint.Vp && ob.T === $scope.data.GasOperatingPoint.T) {
              return count += 1;
            }
          });
          if (count === 0) {
            if ($scope.data.GasOperatingPoint.T === '' && $scope.data.GasOperatingPoint.Ro === '' && $scope.data.GasOperatingPoint.Vp === '' && $scope.data.GasOperatingPoint.Dpt === '') {
              return console.log('Data Required ');
            } else {
              if ($scope.data.GasOperatingPoint.T !== '0' && $scope.data.GasOperatingPoint.Ro !== '0' && $scope.data.GasOperatingPoint.Vp !== '0' && $scope.data.GasOperatingPoint.Dpt !== '0') {
                $scope.data.GasOperatingPoints.push($scope.data.GasOperatingPoint);
                return $scope.data.GasOperatingPoint = {
                  T: '',
                  F: 0,
                  P1: 0,
                  Dpt: '',
                  Vp: '',
                  Ro: ''
                };
              } else {
                return console.log('Data Required ');
              }
            }
          } else {
            return $scope.data.GasOperatingPoint = {
              T: '',
              F: 0,
              P1: 0,
              Dpt: '',
              Vp: '',
              Ro: ''
            };
          }
        }
      } else {
        $scope.data.GasOperatingPoints[dummy] = $scope.data.GasOperatingPoint;
        return $scope.data.GasOperatingPoint = {
          T: '',
          F: 0,
          P1: 0,
          Dpt: '',
          Vp: '',
          Ro: ''
        };
      }
    };
    $scope.deleteGasOperatingPoint = function() {
      _.remove($scope.data.GasOperatingPoints, function(ob) {
        return ob === $scope.currentObj;
      });
      $scope.data.GasOperatingPoint = $scope.data.GasOperatingPoints[$scope.data.GasOperatingPoints.length - 1];
      if ($scope.data.GasOperatingPoints.length === 0) {
        $scope.data.GasOperatingPoint = {
          T: '',
          F: 0,
          P1: 0,
          Dpt: '',
          Vp: '',
          Ro: ''
        };
      }
      $scope.opbtn = true;
    };
    $scope.showGoPoints = function(op, index) {
      $scope.currentObj = op;
      $scope.opbtn = false;
      $scope.indexSet = index;
      return $scope.data.GasOperatingPoint = op;
    };
    $scope.updateGoPoint = function() {
      $scope.opbtn = true;
      return $scope.addOperatingPoint($scope.indexSet);
    };
    $scope.calculateDensity = function() {
      var Alt, T, condition, operate;
      condition = $scope.data.GasDatas.DptUnits;
      operate = $scope.data.GasOperatingPoint.Dpt;
      Alt = $scope.data.GasOperatingPoint.Alt;
      T = $scope.data.GasOperatingPoint.T;
      return $scope.data.GasOperatingPoint.Ro = projectservice.calculateDensity(condition, operate, Alt, T);
    };
    $scope.normaldesityValidate = function() {
      var value;
      value = $scope.data.GasOperatingPoint.Ro.split('.');
      if (value[0] === '' && value[1] !== void 0) {
        return $scope.data.GasOperatingPoint.Ro = 0 + '.' + value[1];
      }
    };
    $scope.convert = function(data) {
      $scope.Vpvalue = data.GasOperatingPoint.Vp;
      if (data.GasDatas.VpUnits === 'M3/S') {
        return $scope.Vpvalue = data.GasOperatingPoint.Vp;
      } else if (data.GasDatas.VpUnits === 'M3/M') {
        return $scope.Vpvalue = data.GasOperatingPoint.Vp * 60;
      } else if (data.GasDatas.VpUnits === 'M3/H') {
        return $scope.Vpvalue = data.GasOperatingPoint.Vp * 3600;
      } else if (data.GasDatas.VpUnits === 'NM3/S') {
        return $scope.Vpvalue = data.GasOperatingPoint.Vp;
      } else if (data.GasDatas.VpUnits === 'NM3/M') {
        return $scope.Vpvalue = data.GasOperatingPoint.Vp * 60;
      } else if (data.GasDatas.VpUnits === 'NM3/H') {
        return $scope.Vpvalue = data.GasOperatingPoint.Vp * 3600;
      }
    };
    return $scope.DPTConvert = function(data) {
      $scope.DPTValue = data.GasOperatingPoint.Dpt;
      if (data.GasDatas.DptUnits === 'PA') {
        return $scope.DPTValue = data.GasOperatingPoint.Dpt;
      } else if (data.GasDatas.DptUnits === 'MMwg') {
        return $scope.DPTValue = 9.81 * data.GasOperatingPoint.Dpt;
      } else if (data.GasDatas.DptUnits === 'Mbar') {
        return $scope.DPTValue = 10 * data.GasOperatingPoint.Dpt * 10;
      } else if (data.GasDatas.DptUnits === 'Dapa') {
        return $scope.DPTValue = data.GasOperatingPoint.Dpt * 10;
      }
    };
  });

}).call(this);
