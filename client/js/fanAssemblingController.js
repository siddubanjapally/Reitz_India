// Generated by CoffeeScript 1.6.3
(function() {
  (angular.module('reitz')).controller('fanAssemblingController', function($scope, $route, $cookieStore, $location, $routeParams, $rootScope, projectservice, ReitzResources, chartService) {
    $scope.state = $routeParams['state'];
    if ($cookieStore.get('id') === void 0) {
      $location.path('#/login');
    }
    $scope.data = projectservice.data;
    $scope.inletSilencer = projectservice.FanCoeffients;
    $scope.lines = {
      faninlet: false,
      fanoutlet: false,
      onlyfan: false,
      onlyinlet: false
    };
    $scope.$watch('data.FanAssemblies.Pressure_Difference', (function(value) {
      if (value === '1') {
        $scope.lines.fanoutlet = true;
        $scope.lines.faninlet = false;
        $scope.lines.onlyinlet = true;
        return $scope.lines.onlyfan = false;
      } else if (value === '2') {
        $scope.lines.faninlet = true;
        $scope.lines.fanoutlet = false;
        return $scope.lines.onlyfan = false;
      } else if (value === '3') {
        $scope.lines.fanoutlet = true;
        $scope.lines.faninlet = true;
        return $scope.lines.onlyfan = true;
      } else {
        $scope.lines.fanoutlet = false;
        $scope.lines.faninlet = false;
        $scope.lines.onlyinlet = false;
        return $scope.lines.onlyfan = false;
      }
    }), true);
    $scope.inletSound_validate = function() {
      var value;
      value = $scope.data.FanAssemblies.InletSoundSilencer.split('.');
      if (value[0] === '' && value[1] !== void 0) {
        return $scope.data.FanAssemblies.InletSoundSilencer = 0 + '.' + value[1];
      }
    };
    $scope.inletBox_validate = function() {
      var value;
      value = $scope.data.FanAssemblies.InletBox.split('.');
      if (value[0] === '' && value[1] !== void 0) {
        return $scope.data.FanAssemblies.InletBox = 0 + '.' + value[1];
      }
    };
    $scope.otherInlet_validate = function() {
      var value;
      value = $scope.data.FanAssemblies.InletOtherParts.split('.');
      if (value[0] === '' && value[1] !== void 0) {
        return $scope.data.FanAssemblies.InletOtherParts = 0 + '.' + value[1];
      }
    };
    return $scope.outletSilencer = function() {
      var value;
      value = $scope.data.FanAssemblies.OutletSilencer.split('.');
      if (value[0] === '' && value[1] !== void 0) {
        return $scope.data.FanAssemblies.OutletSilencer = 0 + '.' + value[1];
      }
    };
  }).directive('combobox', function() {
    return {
      restrict: 'A',
      link: function(scope, element, attrs) {
        return scope.$watch(attrs.ngModel, function(val) {
          return element.combobox();
        }, true);
      }
    };
  });

}).call(this);

/*
//@ sourceMappingURL=fanAssemblingController.map
*/
